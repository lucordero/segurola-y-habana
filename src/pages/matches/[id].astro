---
import type { GetStaticPaths } from "astro";
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { matchPhotos } from '../../data/matchPhotos.ts';

export const getStaticPaths = (() => {
    const paths = matchPhotos.map(photo => ({
        params: { id: photo.id.toString() },
        props: { photo }
    }));
    return paths.length > 0 ? paths : [];
}) satisfies GetStaticPaths;

// Get the current photo and id from Astro.props and Astro.params
const photo = Astro.props.photo;
const photoId = Number(Astro.params.id);
---

<Layout title="Galeria de Fotos - Segurola y Habana FC">
    <Header />

    <main class="min-h-screen py-12">
        <div class="container mx-auto px-4">
            <a href="/matches" class="inline-flex items-center text-team-yellow mb-6 hover:text-yellow-300 transition">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
                Volver a la galería
            </a>

            <div class="max-w-4xl mx-auto bg-gray-900 rounded-xl shadow-2xl overflow-hidden">
                <img
                        src={photo.imageUrl}
                        alt={photo.altText}
                        class="w-full h-auto max-h-[70vh] object-contain p-8"
                />

                <div class="p-6 md:p-8">
                    <h1 class="text-2xl md:text-3xl font-bold text-team-yellow">{photo.altText}</h1>

                    <div class="mt-8 pt-6 border-t border-gray-700">
                        <h2 class="text-xl font-semibold text-team-yellow mb-4">Más Fotos</h2>
                        <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                            <!-- TODO: fix to display related random photos, excluding the current one -->
                            {matchPhotos
                                .filter(p => p.id !== photoId)
                                .slice(0, 3)
                                .map(related => (
                                        <a
                                                href={`/matches/${related.id}`}
                                                class="block group"
                                        >
                                            <img
                                                    src={related.imageUrl}
                                                    alt={related.altText}
                                                    class="w-full h-32 object-cover rounded-lg group-hover:opacity-75 transition-opacity"
                                            />
                                            <p class="text-gray-400 text-sm mt-2 truncate group-hover:text-white transition">
                                                {related.altText}
                                            </p>
                                        </a>
                                ))
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <Footer />
</Layout>